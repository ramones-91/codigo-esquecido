// Generated by view binder compiler. Do not edit!
package app.codigoesquecido.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import android.widget.GridLayout;
import android.widget.ImageView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import app.codigoesquecido.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class QrCodeRevealBinding implements ViewBinding {
  @NonNull
  private final FrameLayout rootView;

  @NonNull
  public final ImageView parte1;

  @NonNull
  public final ImageView parte2;

  @NonNull
  public final ImageView parte3;

  @NonNull
  public final ImageView parte4;

  @NonNull
  public final ImageView parte5;

  @NonNull
  public final ImageView parte6;

  @NonNull
  public final ImageView parte7;

  @NonNull
  public final ImageView parte8;

  @NonNull
  public final GridLayout qrCodeGrid;

  private QrCodeRevealBinding(@NonNull FrameLayout rootView, @NonNull ImageView parte1,
      @NonNull ImageView parte2, @NonNull ImageView parte3, @NonNull ImageView parte4,
      @NonNull ImageView parte5, @NonNull ImageView parte6, @NonNull ImageView parte7,
      @NonNull ImageView parte8, @NonNull GridLayout qrCodeGrid) {
    this.rootView = rootView;
    this.parte1 = parte1;
    this.parte2 = parte2;
    this.parte3 = parte3;
    this.parte4 = parte4;
    this.parte5 = parte5;
    this.parte6 = parte6;
    this.parte7 = parte7;
    this.parte8 = parte8;
    this.qrCodeGrid = qrCodeGrid;
  }

  @Override
  @NonNull
  public FrameLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static QrCodeRevealBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static QrCodeRevealBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.qr_code_reveal, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static QrCodeRevealBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.parte1;
      ImageView parte1 = ViewBindings.findChildViewById(rootView, id);
      if (parte1 == null) {
        break missingId;
      }

      id = R.id.parte2;
      ImageView parte2 = ViewBindings.findChildViewById(rootView, id);
      if (parte2 == null) {
        break missingId;
      }

      id = R.id.parte3;
      ImageView parte3 = ViewBindings.findChildViewById(rootView, id);
      if (parte3 == null) {
        break missingId;
      }

      id = R.id.parte4;
      ImageView parte4 = ViewBindings.findChildViewById(rootView, id);
      if (parte4 == null) {
        break missingId;
      }

      id = R.id.parte5;
      ImageView parte5 = ViewBindings.findChildViewById(rootView, id);
      if (parte5 == null) {
        break missingId;
      }

      id = R.id.parte6;
      ImageView parte6 = ViewBindings.findChildViewById(rootView, id);
      if (parte6 == null) {
        break missingId;
      }

      id = R.id.parte7;
      ImageView parte7 = ViewBindings.findChildViewById(rootView, id);
      if (parte7 == null) {
        break missingId;
      }

      id = R.id.parte8;
      ImageView parte8 = ViewBindings.findChildViewById(rootView, id);
      if (parte8 == null) {
        break missingId;
      }

      id = R.id.qrCodeGrid;
      GridLayout qrCodeGrid = ViewBindings.findChildViewById(rootView, id);
      if (qrCodeGrid == null) {
        break missingId;
      }

      return new QrCodeRevealBinding((FrameLayout) rootView, parte1, parte2, parte3, parte4, parte5,
          parte6, parte7, parte8, qrCodeGrid);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
