// Generated by view binder compiler. Do not edit!
package app.codigoesquecido.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.core.widget.NestedScrollView;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import app.codigoesquecido.R;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.card.MaterialCardView;
import com.google.android.material.floatingactionbutton.FloatingActionButton;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textfield.TextInputLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityMainBinding implements ViewBinding {
  @NonNull
  private final NestedScrollView rootView;

  @NonNull
  public final TextInputEditText answerInput;

  @NonNull
  public final TextInputLayout answerInputLayout;

  @NonNull
  public final TextView answerLabel;

  @NonNull
  public final RecyclerView codeGrid;

  @NonNull
  public final TextView codeTitle;

  @NonNull
  public final LinearLayout codeTitleContainer;

  @NonNull
  public final ImageView helpButton;

  @NonNull
  public final MaterialCardView howToPlayCard;

  @NonNull
  public final FloatingActionButton scanButton;

  @NonNull
  public final TextView subtitleText;

  @NonNull
  public final TextView titleText;

  @NonNull
  public final MaterialButton verifyButton;

  private ActivityMainBinding(@NonNull NestedScrollView rootView,
      @NonNull TextInputEditText answerInput, @NonNull TextInputLayout answerInputLayout,
      @NonNull TextView answerLabel, @NonNull RecyclerView codeGrid, @NonNull TextView codeTitle,
      @NonNull LinearLayout codeTitleContainer, @NonNull ImageView helpButton,
      @NonNull MaterialCardView howToPlayCard, @NonNull FloatingActionButton scanButton,
      @NonNull TextView subtitleText, @NonNull TextView titleText,
      @NonNull MaterialButton verifyButton) {
    this.rootView = rootView;
    this.answerInput = answerInput;
    this.answerInputLayout = answerInputLayout;
    this.answerLabel = answerLabel;
    this.codeGrid = codeGrid;
    this.codeTitle = codeTitle;
    this.codeTitleContainer = codeTitleContainer;
    this.helpButton = helpButton;
    this.howToPlayCard = howToPlayCard;
    this.scanButton = scanButton;
    this.subtitleText = subtitleText;
    this.titleText = titleText;
    this.verifyButton = verifyButton;
  }

  @Override
  @NonNull
  public NestedScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_main, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityMainBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.answerInput;
      TextInputEditText answerInput = ViewBindings.findChildViewById(rootView, id);
      if (answerInput == null) {
        break missingId;
      }

      id = R.id.answerInputLayout;
      TextInputLayout answerInputLayout = ViewBindings.findChildViewById(rootView, id);
      if (answerInputLayout == null) {
        break missingId;
      }

      id = R.id.answerLabel;
      TextView answerLabel = ViewBindings.findChildViewById(rootView, id);
      if (answerLabel == null) {
        break missingId;
      }

      id = R.id.codeGrid;
      RecyclerView codeGrid = ViewBindings.findChildViewById(rootView, id);
      if (codeGrid == null) {
        break missingId;
      }

      id = R.id.codeTitle;
      TextView codeTitle = ViewBindings.findChildViewById(rootView, id);
      if (codeTitle == null) {
        break missingId;
      }

      id = R.id.codeTitleContainer;
      LinearLayout codeTitleContainer = ViewBindings.findChildViewById(rootView, id);
      if (codeTitleContainer == null) {
        break missingId;
      }

      id = R.id.helpButton;
      ImageView helpButton = ViewBindings.findChildViewById(rootView, id);
      if (helpButton == null) {
        break missingId;
      }

      id = R.id.howToPlayCard;
      MaterialCardView howToPlayCard = ViewBindings.findChildViewById(rootView, id);
      if (howToPlayCard == null) {
        break missingId;
      }

      id = R.id.scanButton;
      FloatingActionButton scanButton = ViewBindings.findChildViewById(rootView, id);
      if (scanButton == null) {
        break missingId;
      }

      id = R.id.subtitleText;
      TextView subtitleText = ViewBindings.findChildViewById(rootView, id);
      if (subtitleText == null) {
        break missingId;
      }

      id = R.id.titleText;
      TextView titleText = ViewBindings.findChildViewById(rootView, id);
      if (titleText == null) {
        break missingId;
      }

      id = R.id.verifyButton;
      MaterialButton verifyButton = ViewBindings.findChildViewById(rootView, id);
      if (verifyButton == null) {
        break missingId;
      }

      return new ActivityMainBinding((NestedScrollView) rootView, answerInput, answerInputLayout,
          answerLabel, codeGrid, codeTitle, codeTitleContainer, helpButton, howToPlayCard,
          scanButton, subtitleText, titleText, verifyButton);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
